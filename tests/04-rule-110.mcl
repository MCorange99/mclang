// starting generation
// mem 1 + 1 store
mem 98 + 1 store

0 while dup 98 < do
     0 while dup 100 < do
        dup mem + load if
            mem 100 + 42 store
        else
            mem 100 + 32 store
        end
        1 mem 100 + 1 1 syscall3

        1 +
    end
    drop 

    mem 100 + 10 store 
    1 mem 100 + 1 1 syscall3 // print

    // pattern
    mem 0 +  load 1 <<
    mem 1 +  load 
    |

    1 while dup 98 < do
        swap 1 << 7 &
        over mem + 1 + load |
        2dup 110 swap >> 1 &
        swap mem + swap store
        swap
        1 +
    end
    drop
    drop

    1 + 
end
drop