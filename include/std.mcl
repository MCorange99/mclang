
include "linux.mcl"

//idk what these do

macro write SYS_write syscall3 end
macro read SYS_read syscall3 end
macro f_openat SYS_openat syscall3 end
macro f_close SYS_close syscall1 end
macro exit SYS_exit syscall1 drop end
macro clock_nanosleep SYS_clock_nanosleep syscall4 end

// macro AT_FDCWD -100 end
// macro O_RDONLY 0 end

macro STD_IN 0 end
macro STD_OUT 1 end
macro STD_ERR 2 end


macro puts
    STD_OUT write drop
end

macro gets
    // count buf fd syscall
    STD_IN read drop
end

macro eputs
    STD_ERR write drop
end

macro 2dup
    over over
end
macro 2drop
    drop drop
end

macro / divmod drop end
macro % divmod swap drop end
macro mod % end
macro div / end
macro ++ 1 + end
macro -- 1 - end
macro @ load end
// same as store but ptr and int are swaped
macro ! swap store end

macro nth_argv
    8 * argv + load64 cast(ptr)
end

macro inc64
    dup load64 1 + store64
end

macro dec64
    dup load64 1 - store64
end

macro strlen
    dup
    while dup load 0 != do 1 + end
    swap -
end

// args: str, pos(`here`), condition
macro assert
    not if
        eputs 
        " Assertion error: " eputs
        eputs 
        1 exit
    else
        drop drop drop drop
    end
end



